{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chakradhar\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const api = {\n    key: \"8b35379995db4c6551ae6a7b1cca3390\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(es => es.json()).then(esult => {\n        setWeather(esult);\n        setQuery('');\n        console.log(esult);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  setInterval = () => {\n    let time = new Date();\n    let month = time.getMonth();\n    let date = time.getDate();\n    let day = time.getDay();\n    let hour = time.getHours();\n    let hoursIn12HrFormat = hour >= 13 ? hour % 12 : hour;\n    let minutes = time.getMinutes();\n    let ampm = hour >= 12 ? 'PM' : 'AM';\n    return `${hoursIn12HrFormat}:${minutes} ${ampm}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"current-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"time\",\n          id: \"time\",\n          children: [setInterval(), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"am-pm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"date\",\n          id: \"date\",\n          children: [dateBuilder(new Date()), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"others\",\n            id: \"current-weather-items\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"weather-item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"place-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"time-zone\",\n              id: \"time-zone\",\n              children: \"Asia/Kolkata\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"country\",\n              class: \"country\",\n              children: \"IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"search-bar\",\n              placeholder: \"Search...\",\n              onChange: e => setQuery(e.target.value),\n              value: query,\n              onKeyPress: search\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Chakradhar/my-app/src/App.js"],"names":["React","useState","App","api","key","base","query","setQuery","weather","setWeather","search","evt","fetch","then","es","json","esult","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","setInterval","time","Date","hour","getHours","hoursIn12HrFormat","minutes","getMinutes","ampm","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nfunction App() {\n  const api = {\n    key: \"8b35379995db4c6551ae6a7b1cca3390\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  }  \n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(es => es.json())\n        .then(esult => {\n          setWeather(esult);\n          setQuery('');\n          console.log(esult);\n        });\n    }\n  }\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  setInterval = () => {\n    let time = new Date();\n    let month = time.getMonth();\n    let date = time.getDate();\n    let day = time.getDay();\n    let hour = time.getHours();\n    let hoursIn12HrFormat = hour >= 13 ? hour %12: hour\n    let minutes = time.getMinutes();\n    let ampm = hour >=12 ? 'PM' : 'AM'\n    \n    return `${hoursIn12HrFormat}:${minutes} ${ampm}`\n  }\n\n  return (\n\n<div class=\"container\">\n        <div class=\"current-info\">\n\n            <div class=\"date-container\">\n                <div class=\"time\" id=\"time\">\n                { setInterval() }\n      <span id=\"am-pm\"></span>\n                </div>\n                <div class=\"date\" id=\"date\">\n                { dateBuilder(new Date()) }\n                <div class=\"others\" id=\"current-weather-items\">\n                <div class=\"weather-item\">\n               </div>\n            </div>\n            <div class=\"place-container\">\n                <div class=\"time-zone\" id=\"time-zone\">Asia/Kolkata</div>\n                <div id=\"country\" class=\"country\">IN</div>\n            </div>\n            <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n</div>\n\n</div>\n\n\n\n</div>\n</div>\n</div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}